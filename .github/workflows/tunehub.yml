name: Tunehub-Pipeline

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and Push Docker Image to DockerHub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: List files
        run: ls -R
      - name: Install Java and Maven
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: '17'

      - name: Build Jar with Maven
        run: mvn -f ProjectTuneHub/pom.xml clean package -DskipTests

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ vars.DOCKERHUB_USERNAME }}/tunehub:latest -f Dockerfile .

      - name: Push Docker Image
        run: docker push ${{ vars.DOCKERHUB_USERNAME }}/tunehub:latest

  deploy:
    name: Deploy Application to EC2 Server
    runs-on: self-hosted
    needs: build

    steps:
      - name: Run MySQL Container
        run: |
          docker run -d --name tunehub-db-container \
            -e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} \
            -e MYSQL_DATABASE=${{ vars.MYSQL_DATABASE }} \
            -e MYSQL_USER=${{ vars.MYSQL_USER }} \
            -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            -p 3306:3306 \
            mysql:latest
          echo "‚è≥ Waiting for MySQL to start..."
          sleep 30

      - name: Pull TuneHub Image from DockerHub
        run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/tunehub:latest

      - name: Run TuneHub App Container
        run: |
          docker run -d \
            --name tunehub-app \
            --link tunehub-db-container:mysql \
            -e SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${{ vars.MYSQL_DATABASE }} \
            -e SPRING_DATASOURCE_USERNAME=${{ vars.MYSQL_USER }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            -e SERVER_PORT=8080 \
            -p 8080:8080 \
            ${{ vars.DOCKERHUB_USERNAME }}/tunehub:latest

      - name: Check Running Containers
        run: docker ps -a
